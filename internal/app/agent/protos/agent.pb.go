// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: pkg/agent/protos/agent.proto

package protos

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AgentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AgentResponse) Reset() {
	*x = AgentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agent_protos_agent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentResponse) ProtoMessage() {}

func (x *AgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_protos_agent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentResponse.ProtoReflect.Descriptor instead.
func (*AgentResponse) Descriptor() ([]byte, []int) {
	return file_pkg_agent_protos_agent_proto_rawDescGZIP(), []int{0}
}

func (x *AgentResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AgentResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AgentResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type AlertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config   string `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Tp       string `protobuf:"bytes,2,opt,name=tp,proto3" json:"tp,omitempty"`
	AlertId  string `protobuf:"bytes,3,opt,name=alertId,proto3" json:"alertId,omitempty"`
	Time     int32  `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	Comments string `protobuf:"bytes,5,opt,name=comments,proto3" json:"comments,omitempty"`
}

func (x *AlertRequest) Reset() {
	*x = AlertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agent_protos_agent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertRequest) ProtoMessage() {}

func (x *AlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_protos_agent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertRequest.ProtoReflect.Descriptor instead.
func (*AlertRequest) Descriptor() ([]byte, []int) {
	return file_pkg_agent_protos_agent_proto_rawDescGZIP(), []int{1}
}

func (x *AlertRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *AlertRequest) GetTp() string {
	if x != nil {
		return x.Tp
	}
	return ""
}

func (x *AlertRequest) GetAlertId() string {
	if x != nil {
		return x.AlertId
	}
	return ""
}

func (x *AlertRequest) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *AlertRequest) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

type CronCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CronName     string `protobuf:"bytes,1,opt,name=cronName,proto3" json:"cronName,omitempty"`
	CronTime     string `protobuf:"bytes,2,opt,name=cronTime,proto3" json:"cronTime,omitempty"`
	AddUser      string `protobuf:"bytes,3,opt,name=addUser,proto3" json:"addUser,omitempty"`
	RegionName   string `protobuf:"bytes,4,opt,name=regionName,proto3" json:"regionName,omitempty"`
	CronContent  string `protobuf:"bytes,5,opt,name=cronContent,proto3" json:"cronContent,omitempty"`
	BindFlag     string `protobuf:"bytes,6,opt,name=bindFlag,proto3" json:"bindFlag,omitempty"`
	OperatorType int32  `protobuf:"varint,7,opt,name=operatorType,proto3" json:"operatorType,omitempty"` //1为插入数据;2为删除数据;3为修改数据
	No           int32  `protobuf:"varint,8,opt,name=no,proto3" json:"no,omitempty"`
	StartFlag    int32  `protobuf:"varint,9,opt,name=startFlag,proto3" json:"startFlag,omitempty"` //是否启用定时任务
}

func (x *CronCommandRequest) Reset() {
	*x = CronCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_agent_protos_agent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CronCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CronCommandRequest) ProtoMessage() {}

func (x *CronCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_protos_agent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CronCommandRequest.ProtoReflect.Descriptor instead.
func (*CronCommandRequest) Descriptor() ([]byte, []int) {
	return file_pkg_agent_protos_agent_proto_rawDescGZIP(), []int{2}
}

func (x *CronCommandRequest) GetCronName() string {
	if x != nil {
		return x.CronName
	}
	return ""
}

func (x *CronCommandRequest) GetCronTime() string {
	if x != nil {
		return x.CronTime
	}
	return ""
}

func (x *CronCommandRequest) GetAddUser() string {
	if x != nil {
		return x.AddUser
	}
	return ""
}

func (x *CronCommandRequest) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

func (x *CronCommandRequest) GetCronContent() string {
	if x != nil {
		return x.CronContent
	}
	return ""
}

func (x *CronCommandRequest) GetBindFlag() string {
	if x != nil {
		return x.BindFlag
	}
	return ""
}

func (x *CronCommandRequest) GetOperatorType() int32 {
	if x != nil {
		return x.OperatorType
	}
	return 0
}

func (x *CronCommandRequest) GetNo() int32 {
	if x != nil {
		return x.No
	}
	return 0
}

func (x *CronCommandRequest) GetStartFlag() int32 {
	if x != nil {
		return x.StartFlag
	}
	return 0
}

var File_pkg_agent_protos_agent_proto protoreflect.FileDescriptor

var file_pkg_agent_protos_agent_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0x49, 0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x80, 0x01, 0x0a, 0x0c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x65,
	0x72, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0x96, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x72, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x72, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x72, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x69, 0x6e, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x6e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x6e, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x32, 0x8b, 0x03,
	0x0a, 0x0d, 0x49, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x3f, 0x0a, 0x10, 0x45, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x11, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x53, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x0a, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x43, 0x72, 0x6f, 0x6e,
	0x74, 0x61, 0x73, 0x6b, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_pkg_agent_protos_agent_proto_rawDescOnce sync.Once
	file_pkg_agent_protos_agent_proto_rawDescData = file_pkg_agent_protos_agent_proto_rawDesc
)

func file_pkg_agent_protos_agent_proto_rawDescGZIP() []byte {
	file_pkg_agent_protos_agent_proto_rawDescOnce.Do(func() {
		file_pkg_agent_protos_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_agent_protos_agent_proto_rawDescData)
	})
	return file_pkg_agent_protos_agent_proto_rawDescData
}

var file_pkg_agent_protos_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pkg_agent_protos_agent_proto_goTypes = []interface{}{
	(*AgentResponse)(nil),      // 0: protos.AgentResponse
	(*AlertRequest)(nil),       // 1: protos.AlertRequest
	(*CronCommandRequest)(nil), // 2: protos.CronCommandRequest
}
var file_pkg_agent_protos_agent_proto_depIdxs = []int32{
	1, // 0: protos.IAgentService.EscalationConfig:input_type -> protos.AlertRequest
	1, // 1: protos.IAgentService.AggregationConfig:input_type -> protos.AlertRequest
	1, // 2: protos.IAgentService.SilenceConfig:input_type -> protos.AlertRequest
	1, // 3: protos.IAgentService.NotifyConfig:input_type -> protos.AlertRequest
	1, // 4: protos.IAgentService.AlertClaim:input_type -> protos.AlertRequest
	2, // 5: protos.IAgentService.CrontaskSync:input_type -> protos.CronCommandRequest
	0, // 6: protos.IAgentService.EscalationConfig:output_type -> protos.AgentResponse
	0, // 7: protos.IAgentService.AggregationConfig:output_type -> protos.AgentResponse
	0, // 8: protos.IAgentService.SilenceConfig:output_type -> protos.AgentResponse
	0, // 9: protos.IAgentService.NotifyConfig:output_type -> protos.AgentResponse
	0, // 10: protos.IAgentService.AlertClaim:output_type -> protos.AgentResponse
	0, // 11: protos.IAgentService.CrontaskSync:output_type -> protos.AgentResponse
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_agent_protos_agent_proto_init() }
func file_pkg_agent_protos_agent_proto_init() {
	if File_pkg_agent_protos_agent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_agent_protos_agent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_agent_protos_agent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_agent_protos_agent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CronCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_agent_protos_agent_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_agent_protos_agent_proto_goTypes,
		DependencyIndexes: file_pkg_agent_protos_agent_proto_depIdxs,
		MessageInfos:      file_pkg_agent_protos_agent_proto_msgTypes,
	}.Build()
	File_pkg_agent_protos_agent_proto = out.File
	file_pkg_agent_protos_agent_proto_rawDesc = nil
	file_pkg_agent_protos_agent_proto_goTypes = nil
	file_pkg_agent_protos_agent_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IAgentServiceClient is the client API for IAgentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IAgentServiceClient interface {
	EscalationConfig(ctx context.Context, in *AlertRequest, opts ...grpc.CallOption) (*AgentResponse, error)
	AggregationConfig(ctx context.Context, in *AlertRequest, opts ...grpc.CallOption) (*AgentResponse, error)
	SilenceConfig(ctx context.Context, in *AlertRequest, opts ...grpc.CallOption) (*AgentResponse, error)
	NotifyConfig(ctx context.Context, in *AlertRequest, opts ...grpc.CallOption) (*AgentResponse, error)
	AlertClaim(ctx context.Context, in *AlertRequest, opts ...grpc.CallOption) (*AgentResponse, error)
	CrontaskSync(ctx context.Context, in *CronCommandRequest, opts ...grpc.CallOption) (*AgentResponse, error)
}

type iAgentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewIAgentServiceClient(cc grpc.ClientConnInterface) IAgentServiceClient {
	return &iAgentServiceClient{cc}
}

func (c *iAgentServiceClient) EscalationConfig(ctx context.Context, in *AlertRequest, opts ...grpc.CallOption) (*AgentResponse, error) {
	out := new(AgentResponse)
	err := c.cc.Invoke(ctx, "/protos.IAgentService/EscalationConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAgentServiceClient) AggregationConfig(ctx context.Context, in *AlertRequest, opts ...grpc.CallOption) (*AgentResponse, error) {
	out := new(AgentResponse)
	err := c.cc.Invoke(ctx, "/protos.IAgentService/AggregationConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAgentServiceClient) SilenceConfig(ctx context.Context, in *AlertRequest, opts ...grpc.CallOption) (*AgentResponse, error) {
	out := new(AgentResponse)
	err := c.cc.Invoke(ctx, "/protos.IAgentService/SilenceConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAgentServiceClient) NotifyConfig(ctx context.Context, in *AlertRequest, opts ...grpc.CallOption) (*AgentResponse, error) {
	out := new(AgentResponse)
	err := c.cc.Invoke(ctx, "/protos.IAgentService/NotifyConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAgentServiceClient) AlertClaim(ctx context.Context, in *AlertRequest, opts ...grpc.CallOption) (*AgentResponse, error) {
	out := new(AgentResponse)
	err := c.cc.Invoke(ctx, "/protos.IAgentService/AlertClaim", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iAgentServiceClient) CrontaskSync(ctx context.Context, in *CronCommandRequest, opts ...grpc.CallOption) (*AgentResponse, error) {
	out := new(AgentResponse)
	err := c.cc.Invoke(ctx, "/protos.IAgentService/CrontaskSync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IAgentServiceServer is the server API for IAgentService service.
type IAgentServiceServer interface {
	EscalationConfig(context.Context, *AlertRequest) (*AgentResponse, error)
	AggregationConfig(context.Context, *AlertRequest) (*AgentResponse, error)
	SilenceConfig(context.Context, *AlertRequest) (*AgentResponse, error)
	NotifyConfig(context.Context, *AlertRequest) (*AgentResponse, error)
	AlertClaim(context.Context, *AlertRequest) (*AgentResponse, error)
	CrontaskSync(context.Context, *CronCommandRequest) (*AgentResponse, error)
}

// UnimplementedIAgentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIAgentServiceServer struct {
}

func (*UnimplementedIAgentServiceServer) EscalationConfig(context.Context, *AlertRequest) (*AgentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EscalationConfig not implemented")
}
func (*UnimplementedIAgentServiceServer) AggregationConfig(context.Context, *AlertRequest) (*AgentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AggregationConfig not implemented")
}
func (*UnimplementedIAgentServiceServer) SilenceConfig(context.Context, *AlertRequest) (*AgentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SilenceConfig not implemented")
}
func (*UnimplementedIAgentServiceServer) NotifyConfig(context.Context, *AlertRequest) (*AgentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NotifyConfig not implemented")
}
func (*UnimplementedIAgentServiceServer) AlertClaim(context.Context, *AlertRequest) (*AgentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AlertClaim not implemented")
}
func (*UnimplementedIAgentServiceServer) CrontaskSync(context.Context, *CronCommandRequest) (*AgentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CrontaskSync not implemented")
}

func RegisterIAgentServiceServer(s *grpc.Server, srv IAgentServiceServer) {
	s.RegisterService(&_IAgentService_serviceDesc, srv)
}

func _IAgentService_EscalationConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAgentServiceServer).EscalationConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.IAgentService/EscalationConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAgentServiceServer).EscalationConfig(ctx, req.(*AlertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAgentService_AggregationConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAgentServiceServer).AggregationConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.IAgentService/AggregationConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAgentServiceServer).AggregationConfig(ctx, req.(*AlertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAgentService_SilenceConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAgentServiceServer).SilenceConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.IAgentService/SilenceConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAgentServiceServer).SilenceConfig(ctx, req.(*AlertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAgentService_NotifyConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAgentServiceServer).NotifyConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.IAgentService/NotifyConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAgentServiceServer).NotifyConfig(ctx, req.(*AlertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAgentService_AlertClaim_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AlertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAgentServiceServer).AlertClaim(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.IAgentService/AlertClaim",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAgentServiceServer).AlertClaim(ctx, req.(*AlertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IAgentService_CrontaskSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CronCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IAgentServiceServer).CrontaskSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.IAgentService/CrontaskSync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IAgentServiceServer).CrontaskSync(ctx, req.(*CronCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IAgentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.IAgentService",
	HandlerType: (*IAgentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EscalationConfig",
			Handler:    _IAgentService_EscalationConfig_Handler,
		},
		{
			MethodName: "AggregationConfig",
			Handler:    _IAgentService_AggregationConfig_Handler,
		},
		{
			MethodName: "SilenceConfig",
			Handler:    _IAgentService_SilenceConfig_Handler,
		},
		{
			MethodName: "NotifyConfig",
			Handler:    _IAgentService_NotifyConfig_Handler,
		},
		{
			MethodName: "AlertClaim",
			Handler:    _IAgentService_AlertClaim_Handler,
		},
		{
			MethodName: "CrontaskSync",
			Handler:    _IAgentService_CrontaskSync_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/agent/protos/agent.proto",
}
